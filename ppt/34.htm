<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.4.2
    site: https://github.com/ksky521/nodePPT
    date: 
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>JS语言基础 - By 交互开发课题组</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
    
<link rel="stylesheet" href="./css/theme.colors.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>JS语言基础</h1>
<h2>演讲者：交互开发课题组</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>内容提纲</h2>
<ol>
<li>javascript组成</li>
<li>基础语法</li>
<li>数据类型</li>
<li>案例练习</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>javascript组成</h2>
<ul>
<li>ECMAScript<ul>
<li>语言基础、核心</li>
</ul>
</li>
<li>DOM<ul>
<li>Document Object Model</li>
<li>文档对象模型</li>
<li>用来查找、修改、删除网页文档</li>
</ul>
</li>
<li>BOM<ul>
<li>Browser Object Model</li>
<li>浏览器对象模型</li>
<li>用来访问、检测浏览器对象</li>
</ul>
</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>基础语法</h2>
<ul>
<li>执行顺序<ul>
<li>从上到下</li>
<li>性能上考虑，JS模块一般放在body结束标签前</li>
</ul>
</li>
<li>区分大小写</li>
<li>忽略空格、换行符、tab</li>
<li>注释</li>
<li>标识符和保留字</li>
<li>可选的分号</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>数据类型-松散类型</h2>
<ul>
<li>typeof运算符</li>
<li>简单数据类型<ul>
<li>Undefined</li>
<li>Null</li>
<li>Boolean</li>
<li>Number</li>
<li>String</li>
</ul>
</li>
<li>复杂数据类型（Object）<h4>Array、Date、RegExp、Function等</h4>
</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>typeof运算符</h2>
<ul>
<li>松散类型，赋予什么值就是什么类型</li>
<li>typeof 类型检测<ul>
<li>可以是变量</li>
<li>也可以是字面值</li>
</ul>
</li>
</ul>
<pre><code class="javascript">var message=“hello world”;
typeof(message); //string
typeof 10; //number
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>Undefined</h2>
<ul>
<li>Undefined类型只有一个值，undefined</li>
<li>返回undefined<ul>
<li>声明过变量，但是没有初始化</li>
<li>没有声明过变量</li>
</ul>
</li>
</ul>
<pre><code class="js">var a;
console.log(typeof a);
console.log(a==undefined);
console.log(typeof b);
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>Null</h2>
<ul>
<li>Null类型只有一个值，null</li>
<li>空的Object类型变量返回null</li>
</ul>
<pre><code class="html">&lt;a id=&quot;link&quot; href=&quot;javascript&quot;&gt;一个链接&lt;/a&gt;
&lt;script type=&quot;text/javascript&quot;&gt;                
//null
var oLink=document.getElementById(&quot;lj&quot;);
console.log(oLink);  //null
oLink.style.color=&quot;#ff0000&quot;;    //Uncaught TypeError: Cannot read property &#39;style&#39; of null
&lt;/script&gt;
</code></pre>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>Null</h2>
<ul>
<li>对象型变量最好赋初值null</li>
<li>便于后续的存值判断<pre><code class="html">&lt;script type=&quot;text/javascript&quot;&gt;                
//如果某个变量用于保存对象，最好变量初始化时赋初值null
//便于后续存值判断
var car = null;
if(car != null){
  //car的某些操作
}
&lt;/script&gt;
</code></pre>
</li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>Boolean</h2>
<ul>
<li>使用最多的数据类型之一</li>
<li>两个字面值，true和false<table class="thin">
  <tr>
      <th>数据类型</th>
      <th>转换为true</th>
      <th>转换为false</th>
  </tr>
  <tr>
      <td>String</td>
      <td>任何非空字符串</td>
      <td>空字符串</td>
  </tr>
  <tr>
      <td>Number</td>
      <td>任何非零数字（包括无穷大） </td>
      <td>0和NaN</td>
  </tr>
  <tr>
      <td>Object</td>
      <td>任何对象 </td>
      <td>null</td>
  </tr>
  <tr>
      <td>Undefined</td>
      <td>n/a </td>
      <td>undefined</td>
  </tr>
</table></li>
</ul>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>Number</h2>
<ul>
<li>唯一的数字类型</li>
<li>Number.MIN_VALUE最小值</li>
<li>Number.MAX_VALUE最大值</li>
<li>NaN是一个特殊的数值<ul>
<li>任何涉及NaN的操作都会返回NaN</li>
<li>NaN与任何值不等，包括它本身</li>
<li>使用isNaN()方法判断NaN
```javascript
//Number类型
console.log(Number.MAX_VALUE);
console.log(Number.MIN_VALUE);</li>
</ul>
</li>
</ul>
<p>//NaN
NaN === NaN;        // false
Number.NaN === NaN; // false
isNaN(NaN);         // true
isNaN(Number.NaN);  // true</p>
<p>var e=&#39;hello&#39;;
var f=Number(e);
console.log(isNaN(f));
```</p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>Number-数值转换</h2>
<ul>
<li>Number</li>
<li>parseInt转换为整数</li>
<li>parseFloat转换为浮点数</li>
<li>NaN是一个特殊的数值<ul>
<li>任何涉及NaN的操作都会返回NaN</li>
<li>NaN与任何值不等，包括它本身</li>
<li>使用isNaN()方法判断NaN
```javascript
//Number类型转换
console.log(Number(&#39;360&#39;));
console.log(parseInt(&#39;360degree&#39;));
console.log(parseFloat(&#39;1.2cm&#39;));</li>
</ul>
</li>
</ul>
<p>//功能：将浮点数四舍五入，取小数点后2位 
function toDecimal(x) { 
  var f = parseFloat(x); 
  if (isNaN(f)) {
      console.log(&#39;你的参数不是数字&#39;);
    return; 
  } 
  f = Math.round(x*100)/100; 
  return f; 
} 
console.log(toDecimal(1234.5678));
```</p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2><a href="http://javascript.ruanyifeng.com/stdlib/string.html" target="_blank">String</a></h2>
<ul>
<li>属性</li>
<li>方法
```javascript
//string
var s1 = &#39;abc&#39;;
var s2 = new String(&#39;abc&#39;);</li>
</ul>
<p>typeof s1; // &quot;string&quot;
typeof s2; // &quot;object&quot;</p>
<p>s2.valueOf(); // &quot;abc&quot;</p>
<p>console.log(s1.length);  //3
console.log(s1.charAt(1)); //b
console.log(s1[1]); //b
```</p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2><a href="http://javascript.ruanyifeng.com/stdlib/string.html" target="_blank">String</a></h2>
<ul>
<li>concat<ul>
<li>concat方法用于连接两个字符串，返回一个新字符串，不改变原字符串。</li>
<li>该方法可以接受多个参数。</li>
</ul>
</li>
<li>slice<ul>
<li>用于从原字符串取出子字符串并返回，不改变原字符串</li>
<li>第一个参数是子字符串的开始位置，第二个参数是子字符串的结束位置</li>
</ul>
</li>
<li>split<ul>
<li>按照给定规则分割字符串，返回一个由分割出来的子字符串组成的数组</li>
<li>```javascript
//contact
var s3 = &#39;abc&#39;;
var s4 = &#39;def&#39;;</li>
</ul>
</li>
</ul>
<p>var s5=s3.concat(s4) // &quot;abcdef&quot;
console.log(s3,s4,s5) // &quot;abc&quot; &#39;def&#39;  &quot;abcdef&quot;
console.log(&#39;a&#39;.concat(&#39;b&#39;, &#39;c&#39;)); // &quot;abc&quot;)</p>
<p>//split
&#39;a|b|c&#39;.split(&#39;|&#39;); // [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]
```</p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>JS语法基础</h2>
<iframe src="./demos/editor.html?file=jsBase" style="height:400px;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>案例</h2>
<h3>随机背景</h3>
<iframe src="./demos/editor.html?file=randomBg/index" style="height:400px;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>交互开发</h1>
<h2>旨为前端开发工程师的前端开发课程</h2>
<p><small style="vertical-align:middle;display:inline-block"><iframe src="///ghbtns.com/github-btn.html?user=zptcsoft&repo=zptcsoft.github.io&type=star&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="100" height="20" style="width:110px;height:20px;  background-color: transparent;"></iframe><iframe src="///ghbtns.com/github-btn.html?user=zptcsoft&repo=zptcsoft.github.io&type=fork&count=true" allowtransparency="true" frameborder="0" scrolling="0" width="100" height="20" style="width:110px;height:20px;  background-color: transparent;"></iframe><iframe src="///ghbtns.com/github-btn.html?user=zptcsoft&repo=zptcsoft.github.io&type=follow&count=false" allowtransparency="true" frameborder="0" scrolling="0" width="170" height="20" style="width:170px;height:20px;  background-color: transparent;"></iframe></small></p>

</article></section></slide>
        

        <!-- <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
                <h2 style="color: white;">Powered By nodePPT v1.4.2</h2>
            </article>
        </slide> -->
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = (location.pathname + '#').split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'rollIn',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/highlight.pack.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./js/demo.js"></script>
<link rel="stylesheet" href="./style/01.css">
<script src="./js/zoom.js"></script>

<!--placeholder-->
</body>
</html>
